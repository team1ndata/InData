{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQLDWHENRY",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [],
			"scriptLines": [
				"parameters{",
				"     parameter1 as string ('indicator_id')",
				"}",
				"source(output(",
				"          country_value as string,",
				"          date as long,",
				"          countryiso3code as string,",
				"          NY_GDP_MKTP_CD as double,",
				"          SH_STA_SUIC_P5 as double,",
				"          SP_DYN_TFRT_IN as double,",
				"          SP_ADO_TFRT as double,",
				"          SP_DYN_CBRT_IN as double,",
				"          SP_DYN_IMRT_IN as double,",
				"          SH_XPD_CHEX_PC_CD as double,",
				"          SH_XPD_CHEX_GD_ZS as double,",
				"          SP_DYN_LE00_IN as double,",
				"          SP_POP_GROW as double,",
				"          SP_POP_TOT as integer,",
				"          NY_GDP_PCAP_CD as double,",
				"          ncd_bmi_25a as double,",
				"          ncd_hyp_prevalence_a as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     enableCdc: true,",
				"     mode: 'read',",
				"     skipInitialLoad: true,",
				"     waterMarkColumn: 'date,countryiso3code',",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}